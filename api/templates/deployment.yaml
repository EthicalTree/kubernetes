apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "ethicaltree-api.fullname" . }}
  labels:
    app: {{ template "ethicaltree-api.name" . }}
    chart: {{ template "ethicaltree-api.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "ethicaltree-api.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "ethicaltree-api.name" . }}
        release: {{ .Release.Name }}
    spec:
      imagePullSecrets:
        - name: docker-cloud
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{ if .Values.image.args }}
          args:
            {{ range .Values.image.args }}
            - {{ . }}
            {{ end}}
          {{ end }}
          env:
            - name: RAILS_ENV
              valueFrom:
                secretKeyRef:
                  name: ethicaltree-api
                  key: rails_env

            - name: AWS_API_KEY
              valueFrom:
                secretKeyRef:
                  name: ethicaltree-api
                  key: aws_api_key

            - name: AWS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: ethicaltree-api
                  key: aws_secret_key

            - name: AWS_SMTP_HOST
              valueFrom:
                secretKeyRef:
                  name: ethicaltree-api
                  key: aws_smtp_host

            - name: AWS_SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ethicaltree-api
                  key: aws_smtp_password

            - name: AWS_SMTP_USER_NAME
              valueFrom:
                secretKeyRef:
                  name: ethicaltree-api
                  key: aws_smtp_user_name

            - name: DB_HOSTNAME
              valueFrom:
                secretKeyRef:
                  name: ethicaltree-api
                  key: db_hostname

            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ethicaltree-api
                  key: db_password

            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: ethicaltree-api
                  key: db_username

            - name: GMAPS_API_KEY
              valueFrom:
                secretKeyRef:
                  name: ethicaltree-api
                  key: google_maps_api_key

            - name: GA_CODE
              valueFrom:
                secretKeyRef:
                  name: ethicaltree-api
                  key: ga_code

            - name: IPSTACK_API_KEY
              valueFrom:
                secretKeyRef:
                  name: ethicaltree-api
                  key: ipstack_api_key

            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ethicaltree-api
                  key: redis_password

            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: ethicaltree-api
                  key: secret_key_base

          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          {{ if .Values.checkHealth }}
          livenessProbe:
            httpGet:
              path: /status
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          {{ end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
